---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  name: "mongodb-pvc"
  labels:
    app: "mongo-db"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "mongo-db"
spec:
  selector:
    matchLabels:
      app: "mongo-db"
  replicas: 1
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: "mongo-db"
    spec:
      containers:
        -
          name: "mongo-db"
          image: "mongo"
          imagePullPolicy: "Always"
          env:
            -
              name: "MONGO_INITDB_ROOT_USERNAME"
              value: "xxxx"

            -
              name: "MONGO_INITDB_ROOT_PASSWORD"
              value: "xxxx"

          ports:
            -
              containerPort: 27017
              name: "mongodb"

          volumeMounts:
            -
              name: "mongodb-persistent-storage"
              mountPath: "/c/data/db"

      volumes:
        -
          name: "mongodb-persistent-storage"
          persistentVolumeClaim:
            claimName: "mongodb-pvc"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "mongo-db"
  namespace: "kafka"
  labels:
    app: "mongo-db"
spec:
  ports:
    -
      name: "mongodb"
      port: 27017
      nodePort: 30332
  type: "NodePort"
  selector:
    app: "mongo-db"